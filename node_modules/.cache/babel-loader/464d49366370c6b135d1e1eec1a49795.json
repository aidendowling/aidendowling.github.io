{"ast":null,"code":"'use strict';\n\nconst decodeIco = require('decode-ico');\nconst {\n  MIME_PNG\n} = require('../mime');\n\n/**\n * @typedef {object} ParsedImage\n * @property {number} width Image width.\n * @property {number} height Image height.\n * @property {number} bpp Image color depth as bits per pixel.\n * @property {ArrayBuffer} buffer Image buffer.\n */\n\n/**\n * Parse ICO and return some image object.\n *\n * @access private\n * @param {ArrayBuffer|Buffer} data - ICO file data.\n * @param {string} mime - MIME type for output.\n * @param {object} Image - Image encoder/decoder.\n * @returns {Promise<ParsedImage[]>} Resolves to an array of {@link ParsedImage}.\n */\nconst parse = async (data, mime, Image) => {\n  const icons = decodeIco(data);\n  const transcodeImage = async icon => {\n    if (mime === MIME_PNG && icon.type === 'png') {\n      return Object.assign({\n        buffer: icon.data.buffer.slice(icon.data.byteOffset, icon.data.byteOffset + icon.data.byteLength)\n      }, icon);\n    }\n    if (icon.type === 'png') {\n      const decoded = await Image.decode(icon.data);\n      Object.assign(icon, {\n        data: decoded.data,\n        type: 'bmp'\n      });\n    }\n    return Object.assign(icon, {\n      buffer: await Image.encode(icon, mime),\n      type: mime.replace('image/', '')\n    });\n  };\n  const parsedImages = await Promise.all(icons.map(transcodeImage));\n  return parsedImages;\n};\nmodule.exports = parse;","map":{"version":3,"names":["decodeIco","require","MIME_PNG","parse","data","mime","Image","icons","transcodeImage","icon","type","Object","assign","buffer","slice","byteOffset","byteLength","decoded","decode","encode","replace","parsedImages","Promise","all","map","module","exports"],"sources":["/Users/aidendowling/Documents/GitHub/portfoliosite/node_modules/icojs/src/parse/index.js"],"sourcesContent":["'use strict';\n\nconst decodeIco = require('decode-ico');\nconst { MIME_PNG } = require('../mime');\n\n/**\n * @typedef {object} ParsedImage\n * @property {number} width Image width.\n * @property {number} height Image height.\n * @property {number} bpp Image color depth as bits per pixel.\n * @property {ArrayBuffer} buffer Image buffer.\n */\n\n/**\n * Parse ICO and return some image object.\n *\n * @access private\n * @param {ArrayBuffer|Buffer} data - ICO file data.\n * @param {string} mime - MIME type for output.\n * @param {object} Image - Image encoder/decoder.\n * @returns {Promise<ParsedImage[]>} Resolves to an array of {@link ParsedImage}.\n */\nconst parse = async (data, mime, Image) => {\n  const icons = decodeIco(data);\n\n  const transcodeImage = async icon => {\n    if (mime === MIME_PNG && icon.type === 'png') {\n      return Object.assign({ buffer: icon.data.buffer.slice(icon.data.byteOffset, icon.data.byteOffset + icon.data.byteLength) }, icon);\n    }\n\n    if (icon.type === 'png') {\n      const decoded = await Image.decode(icon.data);\n      Object.assign(icon, {\n        data: decoded.data,\n        type: 'bmp'\n      });\n    }\n\n    return Object.assign(icon, {\n      buffer: await Image.encode(icon, mime),\n      type: mime.replace('image/', '')\n    });\n  };\n\n  const parsedImages = await Promise.all(icons.map(transcodeImage));\n  return parsedImages;\n};\n\nmodule.exports = parse;\n"],"mappings":"AAAA,YAAY;;AAEZ,MAAMA,SAAS,GAAGC,OAAO,CAAC,YAAY,CAAC;AACvC,MAAM;EAAEC;AAAS,CAAC,GAAGD,OAAO,CAAC,SAAS,CAAC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,KAAK,GAAG,MAAAA,CAAOC,IAAI,EAAEC,IAAI,EAAEC,KAAK,KAAK;EACzC,MAAMC,KAAK,GAAGP,SAAS,CAACI,IAAI,CAAC;EAE7B,MAAMI,cAAc,GAAG,MAAMC,IAAI,IAAI;IACnC,IAAIJ,IAAI,KAAKH,QAAQ,IAAIO,IAAI,CAACC,IAAI,KAAK,KAAK,EAAE;MAC5C,OAAOC,MAAM,CAACC,MAAM,CAAC;QAAEC,MAAM,EAAEJ,IAAI,CAACL,IAAI,CAACS,MAAM,CAACC,KAAK,CAACL,IAAI,CAACL,IAAI,CAACW,UAAU,EAAEN,IAAI,CAACL,IAAI,CAACW,UAAU,GAAGN,IAAI,CAACL,IAAI,CAACY,UAAU;MAAE,CAAC,EAAEP,IAAI,CAAC;IACnI;IAEA,IAAIA,IAAI,CAACC,IAAI,KAAK,KAAK,EAAE;MACvB,MAAMO,OAAO,GAAG,MAAMX,KAAK,CAACY,MAAM,CAACT,IAAI,CAACL,IAAI,CAAC;MAC7CO,MAAM,CAACC,MAAM,CAACH,IAAI,EAAE;QAClBL,IAAI,EAAEa,OAAO,CAACb,IAAI;QAClBM,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;IAEA,OAAOC,MAAM,CAACC,MAAM,CAACH,IAAI,EAAE;MACzBI,MAAM,EAAE,MAAMP,KAAK,CAACa,MAAM,CAACV,IAAI,EAAEJ,IAAI,CAAC;MACtCK,IAAI,EAAEL,IAAI,CAACe,OAAO,CAAC,QAAQ,EAAE,EAAE;IACjC,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAChB,KAAK,CAACiB,GAAG,CAAChB,cAAc,CAAC,CAAC;EACjE,OAAOa,YAAY;AACrB,CAAC;AAEDI,MAAM,CAACC,OAAO,GAAGvB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script"}