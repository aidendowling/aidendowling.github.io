{"ast":null,"code":"'use strict';\n\nvar toDataView = require('to-data-view');\n\n/**\n * Check the ArrayBuffer is valid ICO.\n *\n * @alias module:ICO\n * @param {ArrayBuffer|Buffer} source - ICO file data.\n * @returns {boolean} True if arg is ICO.\n */\nvar isICO = function isICO(source) {\n  var dataView = toDataView(source);\n  return dataView.getUint16(0, true) === 0 && dataView.getUint16(2, true) === 1;\n};\nmodule.exports = isICO;","map":{"version":3,"names":["toDataView","require","isICO","source","dataView","getUint16","module","exports"],"sources":["/Users/aidendowling/Documents/GitHub/portfoliosite/node_modules/icojs/src/is-ico.js"],"sourcesContent":["'use strict';\n\nconst toDataView = require('to-data-view');\n\n/**\n * Check the ArrayBuffer is valid ICO.\n *\n * @alias module:ICO\n * @param {ArrayBuffer|Buffer} source - ICO file data.\n * @returns {boolean} True if arg is ICO.\n */\nconst isICO = source => {\n  const dataView = toDataView(source);\n  return dataView.getUint16(0, true) === 0 && dataView.getUint16(2, true) === 1;\n};\n\nmodule.exports = isICO;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAMA,UAAU,GAAGC,OAAO,CAAC,cAAc,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAGC,MAAM,EAAI;EACtB,IAAMC,QAAQ,GAAGJ,UAAU,CAACG,MAAM,CAAC;EACnC,OAAOC,QAAQ,CAACC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,IAAID,QAAQ,CAACC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC;AAC/E,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGL,KAAK","ignoreList":[]},"metadata":{},"sourceType":"script"}